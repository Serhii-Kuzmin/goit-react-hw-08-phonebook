{"version":3,"file":"static/js/848.9d715b37.chunk.js","mappings":"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","sources":["pages/SignIn.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postLogInThunk } from 'services/fetchAuth';\nimport {\n  Button,\n  CssBaseline,\n  TextField,\n  Box,\n  Container,\n  Typography,\n} from '@mui/material';\nimport { boxFormStyle } from './StylePages';\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeInput = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmitLogIn = event => {\n    event.preventDefault();\n    const logInUser = { email, password };\n    dispatch(postLogInThunk(logInUser));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box sx={boxFormStyle}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmitLogIn} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            value={email}\n            type=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={onChangeInput}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            autoComplete=\"current-password\"\n            onChange={onChangeInput}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"],"names":["SignIn","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","dispatch","useDispatch","onChangeInput","event","_event$currentTarget","currentTarget","name","value","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","boxFormStyle","Typography","variant","onSubmit","preventDefault","logInUser","postLogInThunk","mt","TextField","margin","required","fullWidth","type","label","autoComplete","onChange","autoFocus","Button","mb","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","max","xs","React","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer","styled","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","_props$enableColorSch","GlobalStyles","_theme$components","colorSchemeStyles","colorSchemes","entries","forEach","_scheme$palette","_ref2","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","themeOverrides","components","MuiCssBaseline","styleOverrides"],"sourceRoot":""}